Title:Uncaught TypeError: webglBackend.incRef is not a function for tfjs-modes/face-landmarks-detection

Body:**System information**package.json dependencies:```  "dependencies": {    "@tensorflow-models/face-landmarks-detection": "^0.0.2";    "@tensorflow/tfjs": "^2.8.0";    "@tensorflow/tfjs-backend-webgl": "2.4.0";    "@tensorflow/tfjs-converter": "2.4.0";    "@tensorflow/tfjs-core": "2.4.0";    "p5": "^1.1.9";    "stats.js": "^0.17.0"  };```**Describe the current behavior**When importing another .js file that imports '@tensorflow/tfjs' it throws the error:```Uncaught TypeError: webglBackend.incRef is not a function    at reshape (Reshape.ts:50)    at Object.oneHot [as kernelFunc] (OneHot.ts:36)    at kernelFunc (engine.ts:576)    at engine.ts:634    at Engine.scopedRun (engine.ts:439)    at Engine.runKernelFunc (engine.ts:631)    at Engine.runKernel (engine.ts:508)    at oneHot_ (one_hot.ts:58)    at Object.oneHot__op (operation.ts:51)    at Object.parcelRequire.wailaModel.js.@tensorflow/tfjs (wailaModel.js:14)```These warnings are also displayed before the error is thrown:![image](https://user-images.githubusercontent.com/32425272/102172729-58f5f600-3e67-11eb-8db7-138ccf03e13b.png)**Standalone code to reproduce the issue**Here are the imports to the modified demo file from tfjs-models/face-landmarks-detection/demo/index.js:```import {load; SupportedPackages} from '@tensorflow-models/face-landmarks-detection';import '@tensorflow/tfjs-backend-webgl'import * as tf from '@tensorflow/tfjs-core';import someObject from './someFileThatImportsTfjs'```And here are the imports in someFileThatImportsTfjs:`import * as tf from '@tensorflow/tfjs'`

Comment:['Similar issue has been reported here https://github.com/tensorflow/tfjs/issues/4309 ; will leave it to @annxingyuan for further comments; thank you ====='; "@rthadur Thanks for the response. Just to give some more information:The demo worked out of the box for me; but the problem occurs when I add `import someObject from './someFileThatImportsTfjs'` in demo/index.js====="; 'One potential issue is that you are importing the backends twice with two different versions.This package:```"@tensorflow/tfjs": "^2.8.0";```Includes copies of these packages (but at version 2.8.0):```"@tensorflow/tfjs-backend-webgl": "2.4.0";"@tensorflow/tfjs-converter": "2.4.0";"@tensorflow/tfjs-core": "2.4.0";```Since you are already using "@tensorflow/tfjs": "^2.8.0"; you can remove the others from your package json and just `import @tensorflow/tfjs` in your project.====='; "@tafsiri Okay I see. I removed those redundant packages and the previous error does not get thrown. However this gets thrown:```Uncaught (in promise) Error: method must be bilinear or nearest; but was undefinedassert                                                            \tutil_base.ts:108cropAndResize_                                                    \tcrop_and_resize.ts:85cropAndResize__op                                                 \toperation.ts:51y.startPoint                                                      \tface-la…-detection.esm.js:17(anonymous function)                                              \tface-la…-detection.esm.js:17(anonymous function)                                              \tface-la…-detection.esm.js:17(anonymous function)                                              \tengine.ts:442scopedRun                                                         \tengine.ts:453tidy                                                              \tengine.ts:440tidy                                                              \tglobals.ts:192(anonymous function)                                              \tface-la…-detection.esm.js:17(anonymous function)                                              \tface-la…-detection.esm.js:17(anonymous function)                                              \tface-la…-detection.esm.js:17s                                                                 \tface-la…-detection.esm.js:17Async call from Promise.thensetUp                                                             \tindex.js:61Async call from async functionsetUp                                                             \tindex.js:47main                                                              \tindex.js:76parcelRequire.index.js.@tensorflow-models/face-landmarks-detection\tindex.js:170newRequire                                                        \teye_tra…_main.e31bb0bc.js:47(anonymous function)                                              \teye_tra…_main.e31bb0bc.js:81(anonymous function)                                              \teye_tra…_main.e31bb0bc.js:120```My imports in demo/index.js are now:```import {load; SupportedPackages} from '@tensorflow-models/face-landmarks-detection'import * as tf from '@tensorflow/tfjs';import someObject from './someFileThatImportsTfjs'```I am trying to follow the stack trace; but it is a little difficult with face-landmarks-detection.esm.js. I'm not too familiar with Parcel; but it seems like I do not have sourcemapping set up properly?====="; 'Hi @scottzockoll - this is indeed a separate issue; which we are working on a fix for: https://github.com/tensorflow/tfjs/pull/4407====='; '@annxingyuan Great! Thanks for the information. I will close this since it is a duplicate.====='; 'Are you satisfied with the resolution of your issue?<a href="https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tfjs/issues/4405">Yes</a><a href="https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tfjs/issues/4405">No</a>=====']