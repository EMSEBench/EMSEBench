TItle:TensorFlow.LayersModel.dispose() leaves tensors behind

Body:Not quite sure this should be reported; since I found a workaround and I'm not sure it applies to **all** models; but here it goes:### System information- Have I written custom code: no- OS Platform and Distribution: Windows 10 Pro 20H2 (build 19042.928)- TensorFlow.js installed from: npm - TensorFlow.js version: ^3.3.0- Browser version: Microsoft Edge Version 90.0.818.51 (Official build) (64-bit)### Code```jsimport * as TensorFlowLayers from '@tensorflow/tfjs-layers';console.log('numTensors (before model): ' + TensorFlow.memory().numTensors);const modelUrl = '[link to a model JSON]'; // this is the only line you must changeconst model = await TensorFlowLayers.loadLayersModel(modelUrl);console.log('numTensors (before dispose): ' + TensorFlow.memory().numTensors);model.dispose();console.error('numTensors (after dispose): ' + TensorFlow.memory().numTensors);```### Describe the current behaviorNot all tensors are disposed. See output:>numTensors (before model): 0numTensors (before dispose): 264numTensors (after dispose): 260### Describe the expected behaviorI expected to be no tensors after the call to `.dispose()`.### AlternativeI thought about using `.tidy`; but `loadLayersModel` is async so I couldn't.I managed to free all tensors using the bellow code (although TypeScripts gives me an error; requiring me to cast `model` to `any`):```jsTensorFlow.dispose(model as any);```

Comment:['@schdck import is not correct @tensorflow/tfjs-layers has been moved to mono repo tfjs ; please check the documentation here as how to use tfjs layer https://github.com/tensorflow/tfjs/tree/master/tfjs-layers#tensorflowjs-layers-high-level-machine-learning-model-api====='; "Hey @rthadur! Issue remains with the following code:```jsimport * as TensorFlow from '@tensorflow/tfjs';console.log('numTensors (before model): ' + TensorFlow.memory().numTensors);const model = await TensorFlow.loadLayersModel(modelUrl);console.log('numTensors (before dispose): ' + TensorFlow.memory().numTensors);model.dispose();console.error('numTensors (after dispose): ' + TensorFlow.memory().numTensors);```Output:>numTensors (before model): 0numTensors (before dispose): 264numTensors (after dispose): 260====="; 'please check this document as how the memory management happens in tfjs https://www.tensorflow.org/js/guide/tensors_operations#memory . cc @mattsoulanille @lina128 ====='; 'Are you satisfied with the resolution of your issue?<a href="https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tfjs/issues/5034">Yes</a><a href="https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tfjs/issues/5034">No</a>=====']